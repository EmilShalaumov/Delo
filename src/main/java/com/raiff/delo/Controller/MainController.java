package com.raiff.delo.Controller;

import com.raiff.delo.DatabaseAdapter.*;
import com.raiff.delo.Model.*;

import org.aspectj.weaver.ast.Or;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
@RequestMapping(path="/demo") //URL's start
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @Autowired
    private AccountRepository accountRepository;

    @Autowired
    private CardRepository cardRepository;

    @Autowired
    private OrderRepository orderRepository;

    @Autowired
    private TransactionRepository transactionRepository;

    @PostMapping(path="/add")
    public @ResponseBody String addNewUser (@RequestParam String name , @RequestParam String email, @RequestParam String password) {
        User n = new User();
        n.setName(name);
        n.setEmail(email);
        n.setPassword(password);
        userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @PostMapping("/addaccount")
    public @ResponseBody String addNewAccount(@RequestBody Account account) {
        accountRepository.save(account);
        return "Saved";
    }

    @GetMapping("/accounts")
    public @ResponseBody Iterable<Account> getAccounts() {
        return accountRepository.findAll();
    }

    @PostMapping("/addcard")
    public @ResponseBody Card addNewCard(@RequestBody Card card) {
        return cardRepository.save(card);

    }

    @GetMapping("/cards")
    public @ResponseBody Iterable<Card> getCards() {
        return cardRepository.findAll();
    }

    @PostMapping("/addorder")
    public @ResponseBody Order addNewOrder(@RequestBody Order order) {
        return orderRepository.save(order);
    }

    @GetMapping("/orders")
    public @ResponseBody Iterable<Order> getOrders() {
        return orderRepository.findAll();
    }

    @GetMapping("/transactions")
    public @ResponseBody Iterable<Transaction> getTransaction() {
        return transactionRepository.findAll();
    }

    @PostMapping("/addtransaction")
    public @ResponseBody String addNewtransactions(@RequestBody Transaction transaction) {
        transactionRepository.save(transaction);
        return "Saved";
    }

}

